name: C build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        config_params: ["", "--enable-debug", "--enable-debug", "--with-getline --enable-asan", "--enable-utf8 --enable-debug --with-getline", "--enable-utf8 --with-getline --enable-asan"]
        os: [ubuntu-latest, macos-latest, macos-14]
        include:
        - os: ubuntu-latest
          setup-env: sudo apt-get update && sudo apt-get install -y build-essential autoconf gettext autopoint libncursesw5-dev libssl-dev git libmaxminddb-dev jq
        - os: macos-latest
          setup-env: brew install ncurses gettext autoconf automake libmaxminddb openssl@3 jq
        - os: macos-14
          setup-env: brew update && brew install ncurses gettext autoconf automake openssl@3 libmaxminddb jq

    steps:
      - name: Setup env.
        run: ${{ matrix.setup-env }}

      - uses: actions/checkout@v3

      - name: Check Architecture
        run: |
          echo "Running on $(uname -m) architecture"

      - name: autoreconf
        run: autoreconf -fiv

      - name: Configure
        run: ./configure ${{ matrix.config_params }}

      - name: Make
        run: sudo make

      - name: Make Check
        run: sudo make check

      - name: Make Distcheck
        run: sudo make distcheck

      - name: Define log
        run: |
          echo -e 'localhost:80 192.168.0.1 - - [01/Jul/2013:06:20:38 -0500] "GET / HTTP/1.1" 200 3829 "-" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"\
          google.com:80 ::1 - - [01/Jul/2013:06:25:11 -0500] "OPTIONS * HTTP/1.0" 200 136 "-" "Apache (internal dummy connection)"\
          bing.com:80 142.250.190.142 - - [01/Jul/2013:06:41:31 -0500] "-" 408 0 "-" "-"\
          yahoo.com:80 74.6.143.25 - - [01/Jul/2013:07:20:02 -0500] "HEAD / HTTP/1.1" 200 213 "-" "Wget/1.14 (linux-gnu)"' > access.log
          cat access.log
        
      - name: Set up output directory
        run: echo "output_dir=${GITHUB_WORKSPACE}/report" >> $GITHUB_ENV

      - name: Create output directory
        run: mkdir -p ${GITHUB_WORKSPACE}/report

      - name: Run goaccess single thread
        run: ./goaccess access.log --log-format=VCOMBINED -o ${output_dir}/report.html

      - name: Run goaccess multi-thread
        run: ./goaccess access.log --log-format='%v:%^ %h %^[%x] "%r" %s %b "%R" "%u"' --datetime-format='%d/%b/%Y:%H:%M:%S %z' -o ${output_dir}/report.html -j 2 -a --tz="Europe/Berlin"

      - name: Run goaccess multi-thread JSON output
        run: |
          ./goaccess access.log --log-format=VCOMBINED -o ${output_dir}/report.json -j 2 -a --json-pretty-print
          cat ${output_dir}/report.json | jq .

      - name: Make distclean
        run: sudo make distclean
